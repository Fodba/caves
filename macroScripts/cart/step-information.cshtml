@using TeaCommerce.Umbraco.Web
@using TeaCommerce.Api.Models
@using umbraco.MacroEngines
@using umbraco.cms.businesslogic.member
@inherits umbraco.MacroEngines.DynamicNodeContext
@{
  //Store id
  long storeId = long.Parse( Model._Store );

  Order order = null;
  decimal totalQuantity = 0;

  if ( TC.HasCurrentOrder( storeId ) ) {
    order = TC.GetCurrentOrder( storeId );
    totalQuantity = order.OrderLines.Sum( o => o.Quantity );
  }
  
}
@if ( order != null && totalQuantity > 0 ) {
  int count = 1;

  //Member
  Member member = Member.GetCurrentMember();

  //Pages
  DynamicNode currentPage = Model;
  DynamicNode previousStep = currentPage.Previous();
  DynamicNode nextStep = currentPage.Next();

  //Countries
  IEnumerable<Country> countries = TC.GetCountries( storeId );
  IEnumerable<CountryRegion> countryRegions = TC.GetCountryRegions( storeId );
  Country currentPaymentCountry = TC.GetCurrentPaymentCountry( storeId );
  Country currentShippingCountry = TC.GetCurrentShippingCountry( storeId );
  CountryRegion currentPaymentCountryRegion = TC.GetCurrentPaymentCountryRegion( storeId );
  CountryRegion currentShippingCountryRegion = TC.GetCurrentShippingCountryRegion( storeId );

  //Properties
  string company = order.Properties[ "company" ],
         firstName = order.Properties[ "firstName" ],
         lastName = order.Properties[ "lastName" ],
         streetAddress = order.Properties[ "streetAddress" ],
         zipCode = order.Properties[ "zipCode" ],
         city = order.Properties[ "city" ],
         phone = order.Properties[ "phone" ],
         email = order.Properties[ "email" ],
         comments = order.Properties[ "comments" ],
         shipping_check = order.Properties[ "shipping_check" ],
         shipping_company = order.Properties["shipping_company" ],
         shipping_firstName = order.Properties[ "shipping_firstName" ],
         shipping_lastName = order.Properties[ "shipping_lastName" ],
         shipping_streetAddress = order.Properties[ "shipping_streetAddress" ],
         shipping_zipCode = order.Properties[ "shipping_zipCode" ],
         shipping_city = order.Properties[ "shipping_city" ];

  if ( member != null ) {
    company = !string.IsNullOrEmpty( company ) ? company : member.getProperty( "company" ).Value.ToString();
    firstName = !string.IsNullOrEmpty( firstName ) ? firstName : member.getProperty( "firstName" ).Value.ToString();
    lastName = !string.IsNullOrEmpty( lastName ) ? lastName : member.getProperty( "lastName" ).Value.ToString();
    streetAddress = !string.IsNullOrEmpty( streetAddress ) ? streetAddress : member.getProperty( "streetAddress" ).Value.ToString();
    zipCode = !string.IsNullOrEmpty( zipCode ) ? zipCode : member.getProperty( "zipCode" ).Value.ToString();
    city = !string.IsNullOrEmpty( city ) ? city : member.getProperty( "city" ).Value.ToString();
    phone = !string.IsNullOrEmpty( phone ) ? phone : member.getProperty( "phone" ).Value.ToString();
    email = !string.IsNullOrEmpty( email ) ? email : member.Email;
  }
  
  <h1>
    <span>0@(currentPage.Position()+1).</span>
    <span>@currentPage.Name</span>
  </h1>
  
  <form action="/base/TC/FormPost.aspx" method="post">
  <input name="storeId" type="hidden" value="@storeId" />
  <input name="returnUrl" type="hidden" value="@nextStep.Url" />
  <input name="AddOrUpdateOrderProperties" type="hidden" value="properties : properties" />
  <input name="properties" type="hidden" value="company : company, firstName : firstName,lastName : lastName, streetAddress : streetAddress, zipCode : zipCode, city : city, phone : phone, email : email, comments : comments, shipping_check : shipping_check, shipping_company : shipping_company, shipping_firstName : shipping_firstName,shipping_lastName : shipping_lastName, shipping_streetAddress : shipping_streetAddress, shipping_zipCode : shipping_zipCode, shipping_city : shipping_city" />
  <input name="SetCurrentPaymentCountry" type="hidden" value="countryId : paymentCountry" />
  <input name="SetCurrentPaymentCountryRegion" type="hidden" value="countryRegionId : paymentCountryRegion" />
  <input name="SetCurrentShippingCountry" type="hidden" value="countryId : shippingCountry" />
  <input name="SetCurrentShippingCountryRegion" type="hidden" value="countryRegionId : shippingCountryRegion" />
  
  <h2>
    @Dictionary[ "CustomerInformation" ]
  </h2>
  <div id="paymentInformation" class="customerInformation form-horizontal">
    <div class="control-group company">
      <label class="control-label" for="company">
        @Dictionary[ "Company" ]
      </label>
      <div class="controls">
        <input type="text" id="company" name="company" value="@company" tabindex="1" />
      </div>
    </div>
    <div class="control-group streetAddress">
      <label class="control-label" for="streetAddress">
        <span class="required">*</span>
        @Dictionary[ "Address" ]
      </label>
      <div class="controls">
        <input type="text" id="streetAddress" name="streetAddress" required="required" tabindex="6" value="@streetAddress" />
      </div>
    </div>
    <div class="control-group firstName">
      <label class="control-label" for="firstName">
        <span class="required">*</span>
        @Dictionary[ "FirstName" ]
      </label>
      <div class="controls">
        <input type="text" id="firstName" name="firstName" required="required" tabindex="2" value="@firstName" />
      </div>
    </div>
    <div class="control-group zipCode">
      <label class="control-label" for="zipCode">
        <span class="required">*</span>
        @Dictionary[ "ZipCode" ]
      </label>
      <div class="controls">
        <input type="text" id="zipCode" name="zipCode" required="required" tabindex="7" value="@zipCode" />
      </div>
    </div>
    <div class="control-group lastName">
      <label class="control-label" for="lastName">
        <span class="required">*</span>
        @Dictionary[ "LastName" ]
      </label>
      <div class="controls">
        <input type="text" id="lastName" name="lastName" required="required" tabindex="3" value="@lastName" />
      </div>
    </div>
    <div class="control-group city">
      <label class="control-label" for="city">
        <span class="required">*</span>
        @Dictionary[ "City" ]
      </label>
      <div class="controls">
        <input type="text" id="city" name="city" required="required" tabindex="8" value="@city" />
      </div>
    </div>
    <div class="control-group email">
      <label class="control-label" for="email">
        <span class="required">*</span>
        @Dictionary[ "Email" ]
      </label>
      <div class="controls">
        <input type="email" id="email" name="email" required="required" tabindex="4" value="@email" />
      </div>
    </div>
    <div class="control-group country">
      <label class="control-label" for="country">
        <span class="required">*</span>
        @Dictionary[ "Country" ]
      </label>
      <div class="controls">
        <select id="country" name="paymentCountry" tabindex="9">
          @foreach ( Country country in countries ) {
            <option value="@country.Id"
              @if ( country.Id == currentPaymentCountry.Id ) {
                @Html.Raw( "selected=true" )
              }
              >
              @country.Name
            </option>
          }
        </select>
      </div>
    </div>
    
    <div class="control-group phone">
      <label class="control-label" for="phone">
        <span class="required">*</span>
        @Dictionary[ "Telephone" ]
      </label>
      <div class="controls">
        <input type="text" id="phone" name="phone" required="required" tabindex="5" value="@phone" />
      </div>
    </div>
    @if ( countryRegions.Count() > 0 ) {
      <div class="control-group countryRegion">
        <label class="control-label" for="countryRegion">
          @Dictionary[ "Region" ]
        </label>
        <div class="controls">
          <select id="countryRegion" name="paymentCountryRegion" class="countryRegionSelect" tabindex="10" data-countryselectid="country">
            <option value="0" countryid="">---</option>
            @foreach ( CountryRegion countryRegion in countryRegions ) {
              <option value="@countryRegion.Id"
                @if ( currentPaymentCountryRegion != null && countryRegion.Id == currentPaymentCountryRegion.Id ) {
                  @Html.Raw( "selected=true" )  
                }
                >
                @countryRegion.Name
              </option>
            }
          </select>
        </div>
      </div>
    }
    <div class="control-group comments">
      <label class="control-label" for="comments">
        @Dictionary[ "Comments" ]
      </label>
      <div class="controls">
        <textarea id="comments" name="comments" tabindex="11">@comments</textarea>
      </div>
    </div>
  </div>
  <div id="shippingInformationCheck" class="customerInformation">
    <input type="checkbox" class="shippingInformationCheck" id="shipping_check" name="shipping_check" value="true" tabindex="12"
      @if ( shipping_check == "true" ) { @Html.Raw( "checked=\"checked\"" ) }
     />
     <label class="control-label" for="shipping_check">
        @Dictionary[ "ChooseAnotherDeliveryAddress" ]
      </label>
  </div>
  <div id="shippingInformation" class="customerInformation form-horizontal
  @if ( shipping_check != "true" ) { @Html.Raw( "hide" ) }
  ">
    <div class="control-group company">
      <label class="control-label" for="company">
        @Dictionary[ "Company" ]
      </label>
      <div class="controls">
        <input type="text" id="shipping_company" name="shipping_company" value="@shipping_company" tabindex="13" />
      </div>
    </div>
    <div class="control-group zipCode">
      <label class="control-label" for="zipCode">
        @Dictionary[ "ZipCode" ]
      </label>
      <div class="controls">
        <input type="text" id="shipping_zipCode" name="shipping_zipCode" value="@shipping_zipCode" tabindex="17" />
      </div>
    </div>
    <div class="control-group firstName">
      <label class="control-label" for="firstName">
        @Dictionary[ "FirstName" ]
      </label>
      <div class="controls">
        <input type="text" id="shipping_firstName" name="shipping_firstName" value="@shipping_firstName" tabindex="14" />
      </div>
    </div>
    <div class="control-group city">
      <label class="control-label" for="city">
        @Dictionary[ "City" ]
      </label>
      <div class="controls">
        <input type="text" id="shipping_city" name="shipping_city" value="@shipping_city" tabindex="18" />
      </div>
    </div>
    <div class="control-group lastName">
      <label class="control-label" for="lastName">
        @Dictionary[ "LastName" ]
      </label>
      <div class="controls">
        <input type="text" id="shipping_lastName" name="shipping_lastName" value="@shipping_lastName" tabindex="15" />
      </div>
    </div>
    <div class="control-group country">
      <label class="control-label" for="country">
        @Dictionary[ "Country" ]
      </label>
      <div class="controls">
        <select id="shipping_country" name="shippingCountry" tabindex="19">
          <option value="0" countryid="">---</option>
          @foreach ( Country country in countries ) {
            <option value="@country.Id"
            @if ( currentShippingCountry != null && country.Id == currentShippingCountry.Id ) {
              @Html.Raw( "selected=true" )  
            }
            >
              @country.Name
            </option>
          }
        </select>
      </div>
    </div>
    <div class="control-group streetAddress">
      <label class="control-label" for="streetAddress">
        @Dictionary[ "Address" ]
      </label>
      <div class="controls">
        <input type="text" id="shipping_streetAddress" name="shipping_streetAddress" value="@shipping_streetAddress" tabindex="16" />
      </div>
    </div>
    @if ( countryRegions.Count() > 0 ) {
      <div class="control-group countryRegion">
        <label class="control-label" for="countryRegion">
          @Dictionary[ "Region" ]
        </label>
        <div class="controls">
          <select id="shipping_countryRegion" name="paymentCountryRegion" class="countryRegionSelect" data-countryselectid="shipping_country" tabindex="20">
            <option value="0" countryid="">---</option>
            @foreach ( CountryRegion countryRegion in countryRegions ) {
              <option value="@countryRegion.Id"
              @if ( currentShippingCountryRegion != null && countryRegion.Id == currentShippingCountryRegion.Id ) {
                @Html.Raw( "selected=true" )  
              }
              >
                @countryRegion.Name
              </option>
            }
          </select>
        </div>
      </div>
    }
  </div>
  <div id="cartBottom" class="noPrint">
    <div class="input-append" id="next">
      <input type="submit" class="btn btn-brown" value="@nextStep.Name" tabindex="21" />
      <input type="submit" class="btn btn-brown" value=">" />
    </div>
    <div class="input-append" id="prev">
      <a href="@previousStep.Url" class="btn btn-brown">< </a><a href="@previousStep.Url" class="btn btn-brown">
        @previousStep.Name</a>
    </div>
  </div>
  </form>
}